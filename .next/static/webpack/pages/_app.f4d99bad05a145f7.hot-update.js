"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./utils/uploadToPinata.js":
/*!*********************************!*\
  !*** ./utils/uploadToPinata.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nasync function uploadToPinata(blob) {\n    // Upload the blob to PINATA\n    const formData = new FormData();\n    formData.append(\"file\", blob);\n    const resFile = await (0,axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        method: \"post\",\n        url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\n        data: formData,\n        headers: {\n            pinata_api_key: \"ad74e07fb692218fa8ca\",\n            pinata_secret_api_key: \"02f02b50d8560661df6c30cd130bf7249c8c26cd53f29e4582349453c0050afc\",\n            \"Content-Type\": \"multipart/form-data\"\n        }\n    });\n    const fileURL = \"ipfs://\".concat(resFile.data.IpfsHash);\n    return fileURL;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (uploadToPinata);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy91cGxvYWRUb1BpbmF0YS5qcyIsIm1hcHBpbmdzIjoiOztBQUEwQjtBQUUxQixlQUFlQyxlQUFlQyxJQUFJO0lBQ2hDLDRCQUE0QjtJQUM1QixNQUFNQyxXQUFXLElBQUlDO0lBQ3JCRCxTQUFTRSxNQUFNLENBQUMsUUFBUUg7SUFDeEIsTUFBTUksVUFBVSxNQUFNTixpREFBS0EsQ0FBQztRQUMxQk8sUUFBUTtRQUNSQyxLQUFLO1FBQ0xDLE1BQU1OO1FBQ05PLFNBQVM7WUFDUEMsZ0JBQWlCO1lBQ2pCQyx1QkFBd0I7WUFDeEIsZ0JBQWdCO1FBQ2xCO0lBQ0Y7SUFDQSxNQUFNQyxVQUFVLFVBQWdDLE9BQXRCUCxRQUFRRyxJQUFJLENBQUNLLFFBQVE7SUFDL0MsT0FBT0Q7QUFDVDtBQUVBLCtEQUFlWixjQUFjQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3V0aWxzL3VwbG9hZFRvUGluYXRhLmpzPzVjMTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xuXG5hc3luYyBmdW5jdGlvbiB1cGxvYWRUb1BpbmF0YShibG9iKSB7XG4gIC8vIFVwbG9hZCB0aGUgYmxvYiB0byBQSU5BVEFcbiAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgZm9ybURhdGEuYXBwZW5kKFwiZmlsZVwiLCBibG9iKTtcbiAgY29uc3QgcmVzRmlsZSA9IGF3YWl0IGF4aW9zKHtcbiAgICBtZXRob2Q6IFwicG9zdFwiLFxuICAgIHVybDogXCJodHRwczovL2FwaS5waW5hdGEuY2xvdWQvcGlubmluZy9waW5GaWxlVG9JUEZTXCIsXG4gICAgZGF0YTogZm9ybURhdGEsXG4gICAgaGVhZGVyczoge1xuICAgICAgcGluYXRhX2FwaV9rZXk6IGBhZDc0ZTA3ZmI2OTIyMThmYThjYWAsXG4gICAgICBwaW5hdGFfc2VjcmV0X2FwaV9rZXk6IGAwMmYwMmI1MGQ4NTYwNjYxZGY2YzMwY2QxMzBiZjcyNDljOGMyNmNkNTNmMjllNDU4MjM0OTQ1M2MwMDUwYWZjYCxcbiAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwibXVsdGlwYXJ0L2Zvcm0tZGF0YVwiLFxuICAgIH0sXG4gIH0pO1xuICBjb25zdCBmaWxlVVJMID0gYGlwZnM6Ly8ke3Jlc0ZpbGUuZGF0YS5JcGZzSGFzaH1gO1xuICByZXR1cm4gZmlsZVVSTDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdXBsb2FkVG9QaW5hdGE7XG4iXSwibmFtZXMiOlsiYXhpb3MiLCJ1cGxvYWRUb1BpbmF0YSIsImJsb2IiLCJmb3JtRGF0YSIsIkZvcm1EYXRhIiwiYXBwZW5kIiwicmVzRmlsZSIsIm1ldGhvZCIsInVybCIsImRhdGEiLCJoZWFkZXJzIiwicGluYXRhX2FwaV9rZXkiLCJwaW5hdGFfc2VjcmV0X2FwaV9rZXkiLCJmaWxlVVJMIiwiSXBmc0hhc2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./utils/uploadToPinata.js\n"));

/***/ })

});